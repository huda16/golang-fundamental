basePath: /
definitions:
  helpers.APIError:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  helpers.CommentInput:
    properties:
      message:
        type: string
      recipe_id:
        type: integer
    type: object
  helpers.DeleteResponse:
    properties:
      message:
        type: string
    type: object
  helpers.FollowInput:
    properties:
      followed_id:
        type: integer
    type: object
  helpers.LikeInput:
    properties:
      recipe_id:
        type: integer
    type: object
  helpers.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  helpers.LoginResponse:
    properties:
      token:
        type: string
    type: object
  helpers.RecipeCommentInput:
    properties:
      message:
        type: string
    type: object
  helpers.RecipeInput:
    properties:
      category:
        type: string
      description:
        type: string
      ingredients:
        type: string
      picture_url:
        type: string
      steos:
        type: string
      tags:
        type: string
      title:
        type: string
    type: object
  helpers.RegisterInput:
    properties:
      age:
        type: integer
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  helpers.RegisterResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  models.Comments:
    properties:
      created_at:
        type: string
      id:
        type: integer
      message:
        type: string
      recipe:
        $ref: '#/definitions/models.Recipes'
      recipe_id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.Users'
      user_id:
        type: integer
    type: object
  models.Follows:
    properties:
      created_at:
        type: string
      followed:
        $ref: '#/definitions/models.Users'
      followed_id:
        type: integer
      follower:
        $ref: '#/definitions/models.Users'
      follower_id:
        type: integer
      id:
        type: integer
      updated_at:
        type: string
    type: object
  models.Likes:
    properties:
      created_at:
        type: string
      id:
        type: integer
      recipe:
        $ref: '#/definitions/models.Recipes'
      recipe_id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.Users'
      user_id:
        type: integer
    type: object
  models.Recipes:
    properties:
      category:
        type: string
      comments:
        items:
          $ref: '#/definitions/models.Comments'
        type: array
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      ingredients:
        type: string
      likes:
        items:
          $ref: '#/definitions/models.Likes'
        type: array
      picture_url:
        type: string
      steps:
        type: string
      tags:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.Users'
      user_id:
        type: integer
    type: object
  models.Users:
    properties:
      bio:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      recipes:
        items:
          $ref: '#/definitions/models.Recipes'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: soberkoder@swagger.io
    name: API Support
  description: This is a sample service for managing cars
  termsOfService: http://swagger.io/terms/
  title: RecipeBook API
  version: "1.0"
paths:
  /comments:
    get:
      consumes:
      - application/json
      description: Get details of all comments
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comments'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Get details
      tags:
      - Comments
    post:
      consumes:
      - application/json
      description: Post details of comment corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create comment
        in: body
        name: helpers.CommentInput
        required: true
        schema:
          $ref: '#/definitions/helpers.CommentInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Post details for a given Id
      tags:
      - Comments
  /comments/{commentId}:
    delete:
      consumes:
      - application/json
      description: Delete the order corresponding to the input id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the comment to be deleted
        in: path
        name: commentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Delete comment identified by the given id
      tags:
      - Comments
    get:
      consumes:
      - application/json
      description: Get details comment corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the comment
        in: path
        name: commentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Get details for a given Id
      tags:
      - Comments
    put:
      consumes:
      - application/json
      description: Update the comment corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the comment to be updated
        in: path
        name: commentId
        required: true
        type: integer
      - description: update comment
        in: body
        name: helpers.CommentInput
        required: true
        schema:
          $ref: '#/definitions/helpers.CommentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Update comment identified by the given Id
      tags:
      - Comments
  /follows:
    get:
      consumes:
      - application/json
      description: Get details of all follow
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Follows'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Get details
      tags:
      - Follow
    post:
      consumes:
      - application/json
      description: Post details of follow corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create follow
        in: body
        name: helpers.FollowInput
        required: true
        schema:
          $ref: '#/definitions/helpers.FollowInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Follows'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Post details for a given Id
      tags:
      - Follow
  /follows/{followId}:
    delete:
      consumes:
      - application/json
      description: Delete the order corresponding to the input id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the follow to be deleted
        in: path
        name: followId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Delete follow identified by the given id
      tags:
      - Follow
    get:
      consumes:
      - application/json
      description: Get details follow corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the follow
        in: path
        name: followId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Follows'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Get details for a given Id
      tags:
      - Follow
  /likes:
    get:
      consumes:
      - application/json
      description: Get details of all likes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Likes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Get details
      tags:
      - Likes
    post:
      consumes:
      - application/json
      description: Post details of like corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create like
        in: body
        name: helpers.LikeInput
        required: true
        schema:
          $ref: '#/definitions/helpers.LikeInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Likes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Post details for a given Id
      tags:
      - Likes
  /likes/{likeId}:
    delete:
      consumes:
      - application/json
      description: Delete the order corresponding to the input id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the like to be deleted
        in: path
        name: likeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Delete like identified by the given id
      tags:
      - Likes
    get:
      consumes:
      - application/json
      description: Get details like corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the like
        in: path
        name: likeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Likes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Get details for a given Id
      tags:
      - Likes
  /recipes:
    get:
      consumes:
      - application/json
      description: Get details of all recipes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Recipes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Get details
      tags:
      - Recipes
    post:
      consumes:
      - application/json
      description: Post details of recipe corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create recipe
        in: body
        name: helpers.RecipeInput
        required: true
        schema:
          $ref: '#/definitions/helpers.RecipeInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Recipes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Post details for a given Id
      tags:
      - Recipes
  /recipes/{recipeId}:
    delete:
      consumes:
      - application/json
      description: Delete the order corresponding to the input id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the recipe to be deleted
        in: path
        name: recipeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Delete recipe identified by the given id
      tags:
      - Recipes
    get:
      consumes:
      - application/json
      description: Get details recipe corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the recipe
        in: path
        name: recipeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Recipes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Get details for a given Id
      tags:
      - Recipes
    put:
      consumes:
      - application/json
      description: Update the recipe corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the recipe to be updated
        in: path
        name: recipeId
        required: true
        type: integer
      - description: update recipe
        in: body
        name: helpers.RecipeInput
        required: true
        schema:
          $ref: '#/definitions/helpers.RecipeInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Recipes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Update recipe identified by the given Id
      tags:
      - Recipes
  /recipes/{recipeId}/comments:
    post:
      consumes:
      - application/json
      description: Post details of recipe corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the recipe
        in: path
        name: recipeId
        required: true
        type: integer
      - description: create recipe comment
        in: body
        name: helpers.RecipeCommentInput
        required: true
        schema:
          $ref: '#/definitions/helpers.RecipeCommentInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Post details for a given Id
      tags:
      - Recipes
  /recipes/{recipeId}/follows:
    post:
      consumes:
      - application/json
      description: Post details of recipe corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the recipe
        in: path
        name: recipeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Likes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Post details for a given Id
      tags:
      - Recipes
  /recipes/{recipeId}/likes:
    post:
      consumes:
      - application/json
      description: Post details of recipe corresponding to the input Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the recipe
        in: path
        name: recipeId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Likes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      security:
      - BearerAuth: []
      summary: Post details for a given Id
      tags:
      - Recipes
  /users/login:
    post:
      parameters:
      - description: User Login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/helpers.LoginInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      summary: login a user
      tags:
      - Users
  /users/register:
    post:
      parameters:
      - description: User Register
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/helpers.RegisterInput'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helpers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIError'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/helpers.APIError'
      summary: create a user
      tags:
      - Users
swagger: "2.0"
